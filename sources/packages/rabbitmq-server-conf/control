#!/bin/bash

NAME="rabbitmq-server-conf"
VERSION=0.4
RELEASE=0
DESCRIPTION=""
REQUIRES="canohome canotools supervisord-conf rabbitmq-server"

NO_ARCH=true
NO_DIST=true
NO_DISTVERS=true

function pre_install(){
	echo "Pre-install $NAME $VERSION-$RELEASE ..."
	check_code $? 
}

function post_install(){
	echo "Post-install $NAME $VERSION-$RELEASE ..."

	launch_cmd 1 service rabbitmq-server start

	echo -n "Safe wait ..."

	STATE=0
	TRY=0
	while [ $STATE -ne 1 ]; do
	    if [ $TRY -eq 30 ]; then
	        break
	    fi
	    sleep 1
		$STATE=`service rabbitmq-server status | grep RUNNING | wc -l`
	    TRY=$((TRY + 1))
	    echo -n "."
	done
	echo
	check_code $STATE "Failed to test rabbit service ..."
	sleep 1

	CODE=0
	echo " + Declare Admin user ..."
	$PREFIX/bin/rabbitmqctl add_user admin admin
	$PREFIX/bin/rabbitmqctl set_user_tags admin administrator
	RCODE=$?
	if [ $RCODE -ne 0 ]; then CODE=$RCODE; fi
	
	VHOST_EXISTS=`rabbitmqctl list_vhosts | grep canopsis | wc -l`

	if [ $VHOST_EXISTS -ne 1 ]
	then
		echo " + Declare vhost ..."
		$PREFIX/bin/rabbitmqctl add_vhost canopsis
		RCODE=$?
		if [ $RCODE -ne 0 ]; then CODE=$RCODE; fi

		echo " + Declare permissions for guest user ..."
		$PREFIX/bin/rabbitmqctl set_permissions -p canopsis guest ".*" ".*" ".*"
		RCODE=$?
		if [ $RCODE -ne 0 ]; then CODE=$RCODE; fi
	fi

	launch_cmd 1 service rabbitmq-server stop

	check_code $CODE "Error in rabbitMQ configurations ..."
	
	rm -f $PREFIX/var/log/rabbitmq/*
}

function pre_remove(){
	echo "Pre-remove $NAME $VERSION-$RELEASE ..."
	service rabbitmq-server stop 
}

function post_remove(){
	echo "Post-remove $NAME $VERSION-$RELEASE ..."
	check_code $?
}

function pre_update(){
	echo "Pre-update $NAME $VERSION-$RELEASE ..."

	rm $PREFIX/etc/init.d/rabbitmq-server &> /dev/null || true
	check_code $?
}

function post_update(){
	echo "Post-update $NAME $VERSION-$RELEASE ..."
	check_code $?
}

function purge(){
	echo "Purge $NAME $VERSION-$RELEASE ..."
	rm -Rf $PREFIX/var/lib/rabbitmq
	rm -Rf $PREFIX/var/log/rabbitmq
}
